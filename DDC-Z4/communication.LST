C51 COMPILER V9.51   COMMUNICATION                                                         04/15/2014 14:04:52 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE COMMUNICATION
OBJECT MODULE PLACED IN communication.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE communication.c BROWSE DEBUG OBJECTEXTEND TABS(3)

line level    source

   1          /*---------------------------------------------------
   2             communication.c (v1.00)
   3             
   4             Í¨ĞÅ³ÌĞò
   5          ---------------------------------------------------*/ 
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "communication.h"
  11          #include "Delay.h"
  12          
  13          /*-------------------------------------------------*/
  14          tByte myTxRxData[7]={0x00,0x00,0x00,0x00,0x00,0x00,0x00};
  15          
  16          extern tByte receive_LV_count;      //Ã¿´Îtimer1Òç³öÊ±ÅĞ¶Ï½ÓÊÕÏßÈç¹ûÎªLV£¬Ôò¼ÆÊı¼Ó1£¬ÒÔ´ËÀ´±íÃ÷µÍµçÆ½µÄÊ±¼ä
  17          extern bit receive_wire_flag;    //½ÓÊÕÍ¨ĞÅÏßµÄ±êÖ¾Î»£¬1±íÃ÷¸ßµçÆ½£¬0±íÃ÷µÍµçÆ½£¬Ã¿´Îtimer1Òç³öÊ±£¬ÅĞ¶ÏP1.1Ò
             -»´Î¡£ÒÔ´ËÀ´±íÃ÷ÊÇ·ñÎªÒ»´ÎÕıÈ·µÄÏÂ½µÑØ
  18          extern tByte one_receive_byte;      //½ÓÊÕÊı¾İµÄÒ»¸ö×Ö½Ú£¬½ÓÊÕÍêºó½«Æä¸³Öµ¸øreceived_data_bufferÏà¶ÔÓ¦µÄ×Ö½Ú
  19          extern tByte one_receive_byte_count;         //one_receive_byteÓĞ8Î»£¬´Ë¼ÆÊı±íÃ÷½ÓÊÕµ½µÚ¼¸Î»£¬Ã¿´Î¼ÆÊıµ½8µÄÊ±ºò±
             -íÃ÷Ò»¸ö×Ö½Ú½ÓÊÕÍê³É¡£
  20          extern tByte receive_HV_count;      //¶¨Ê±Æ÷T1ÔÚÃ»ÓĞĞÅºÅµ½À´µÄÊ±ºò£¬¶Ô¸ßµçÆ½¼ÆÊı£¬Ò»µ©³¬¹ıÄ³¸öÖµ£¬Ôò½«one_rece
             -ive_byte_countÇå0
  21          extern tByte data_count;            //½ÓÊÕÊı¾İ»º´æµÄÎ»Êı£¬¼´±íÃ÷µÚ¼¸¸ö»º´æÊı¾İ
  22          extern tByte received_data_buffer[7];     //½ÓÊÕÊı¾İ»º´æ
  23          extern bit receive_data_finished_flag;    //½ÓÊÕÕâÒ»´®Êı¾İÍê³Éºó£¬´Ë±êÖ¾Î»ÖÃ1
  24          
  25          /*----------------------------------------------------
  26             initsignal()
  27             
  28             ³õÊ¼»¯ĞÅºÅ³ÌĞò£¬½ÓÊÕ»úÔÚ½Ó½ÓÊÕĞÅºÅµÄÊ±ºò£¬ĞèÒªÓĞ
  29             Ò»¶Î´úÂëÀ´Ê¹½ÓÊÕ»ú´ò¿ª£¬¶øÕâÒ»¶Î³ÌĞòÓĞ¿ÉÄÜÎŞ·¨Ê¶±ğ
  30             ³öÀ´£¬¶øÊÇÏàµ±ÓÚ·Ï´úÂë£¬Ö»Õ¼ÓÃÍ¨ĞÅÊ±¼ä¡£
  31          ----------------------------------------------------*/
  32          
  33          void initsignal()
  34          {
  35   1         unsigned char k,k1;
  36   1         unsigned char mystartbuffer=0xaa;
  37   1         for(k1=0;k1<3;k1++)
  38   1         {
  39   2            for(k=0;k<8;k++)
  40   2            {
  41   3               if((mystartbuffer&0x80)==0x80)//Îª1
  42   3               {
  43   4                  P10=0;
  44   4                  Delay3(80);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
  45   4               }
  46   3               else//Îª0µÄÇé¿ö
  47   3               {
  48   4                  P10=0;
  49   4                  Delay3(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
  50   4               }
  51   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
  52   3               mystartbuffer<<=1;
C51 COMPILER V9.51   COMMUNICATION                                                         04/15/2014 14:04:52 PAGE 2   

  53   3               Delay3(150);//ÑÓÊ±Òª´óÓÚ2ms
  54   3            }
  55   2            mystartbuffer=0xaa;
  56   2            Delay3(80);
  57   2         }
  58   1         P10=1;
  59   1      }
  60          
  61          /*----------------------------------------------------
  62             initsignal2()
  63             
  64             ³õÊ¼»¯ĞÅºÅ³ÌĞò£¬½ÓÊÕ»úÔÚ½Ó½ÓÊÕĞÅºÅµÄÊ±ºò£¬ĞèÒªÓĞ
  65             Ò»¶Î´úÂëÀ´Ê¹½ÓÊÕ»ú´ò¿ª£¬¶øÕâÒ»¶Î³ÌĞòÓĞ¿ÉÄÜÎŞ·¨Ê¶±ğ
  66             ³öÀ´£¬¶øÊÇÏàµ±ÓÚ·Ï´úÂë£¬Ö»Õ¼ÓÃÍ¨ĞÅÊ±¼ä¡£
  67          ----------------------------------------------------*/
  68          
  69          void initsignal2()
  70          {
  71   1         unsigned char k,k1;
  72   1         unsigned char mystartbuffer=0xaa;
  73   1         for(k1=0;k1<3;k1++)
  74   1         {
  75   2            for(k=0;k<8;k++)
  76   2            {
  77   3               if((mystartbuffer&0x80)==0x80)//Îª1
  78   3               {
  79   4                  P10=0;
  80   4                  Delay3(80);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
  81   4               }
  82   3               else//Îª0µÄÇé¿ö
  83   3               {
  84   4                  P10=0;
  85   4                  Delay3(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
  86   4               }
  87   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
  88   3               mystartbuffer<<=1;
  89   3               Delay3(150);//ÑÓÊ±Òª´óÓÚ2ms
  90   3            }
  91   2            mystartbuffer=0xaa;
  92   2            Delay3(80);
  93   2         }
  94   1         P10=1;
  95   1      }
  96          
  97          /*----------------------------------------------------
  98             initsignal3()
  99             
 100             ³õÊ¼»¯ĞÅºÅ³ÌĞò£¬½ÓÊÕ»úÔÚ½Ó½ÓÊÕĞÅºÅµÄÊ±ºò£¬ĞèÒªÓĞ
 101             Ò»¶Î´úÂëÀ´Ê¹½ÓÊÕ»ú´ò¿ª£¬¶øÕâÒ»¶Î³ÌĞòÓĞ¿ÉÄÜÎŞ·¨Ê¶±ğ
 102             ³öÀ´£¬¶øÊÇÏàµ±ÓÚ·Ï´úÂë£¬Ö»Õ¼ÓÃÍ¨ĞÅÊ±¼ä¡£
 103          ----------------------------------------------------*/
 104          
 105          void initsignal3()
 106          {
 107   1         unsigned char k,k1;
 108   1         unsigned char mystartbuffer=0xaa;
 109   1         for(k1=0;k1<3;k1++)
 110   1         {
 111   2            for(k=0;k<8;k++)
 112   2            {
 113   3               if((mystartbuffer&0x80)==0x80)//Îª1
 114   3               {
C51 COMPILER V9.51   COMMUNICATION                                                         04/15/2014 14:04:52 PAGE 3   

 115   4                  P10=0;
 116   4                  Delay3(80); //ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 117   4               }
 118   3               else
 119   3               {
 120   4                  P10=0;
 121   4                  Delay3(80); //ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 122   4               }
 123   3               P10=1;
 124   3               mystartbuffer<<=1;
 125   3               Delay3(150);//ÑÓÊ±Òª´óÓÚ2ms
 126   3            }
 127   2            mystartbuffer=0xaa;
 128   2            Delay3(80);
 129   2         }
 130   1         P10=1;
 131   1      }
 132          
 133          /*------------------------------------------------------------------------
 134             
 135          
 136          /*--------------------------------------------------
 137             ComMode_1_Data()
 138             
 139             Ö÷»ú½ÓÊÕµ½±àÂë1ĞÅºÅºó£¬»á·´À¡Ò»¸ö±àÂë1ĞÅºÅ¸ø¸½»ú
 140             ÒÔ±íÊ¾Ö÷»úÔÚ¸½»ú¸½½ü¡£
 141          ---------------------------------------------------*/
 142          
 143          void ComMode_1_Data()   
 144          {
 145   1         unsigned char i,n;
 146   1         receiver_EN = 1;
 147   1         transmiter_power = 1;            
 148   1         transmiter_EN = 0;
 149   1         myTxRxData[0]=CmdHead;
 150   1         myTxRxData[1]=MyAddress;
 151   1         myTxRxData[2]=ComMode_1;
 152   1      /* myTxRxData[3]=0x00;
 153   1         myTxRxData[4]=0x00;
 154   1         myTxRxData[5]=0x00;
 155   1         myTxRxData[6]=0x00;
 156   1      */
 157   1         initsignal2();
 158   1      
 159   1         for(i=0;i<3;i++)
 160   1         {
 161   2            for(n=0;n<8;n++)
 162   2            {
 163   3               if((myTxRxData[i]&0x80)==0x80)//Îª1
 164   3               {
 165   4                  P10=0;
 166   4                  Delay4(120);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 167   4               }
 168   3               else//Îª0µÄÇé¿ö
 169   3               {
 170   4                  P10=0;
 171   4                  Delay4(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 172   4               }
 173   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
 174   3               myTxRxData[i]<<=1;
 175   3               Delay4(50);//ÑÓÊ±Òª´óÓÚ2ms
 176   3            }
C51 COMPILER V9.51   COMMUNICATION                                                         04/15/2014 14:04:52 PAGE 4   

 177   2         }
 178   1         transmiter_EN = 1;
 179   1         receiver_EN = 0;
 180   1         transmiter_power = 1;            
 181   1      }
 182          
 183          /*--------------------------------------------------
 184             ComMode_2_Data()
 185             when battery is stolen, transmit this code to slave. 
 186          ---------------------------------------------------*/
 187          
 188          void ComMode_2_Data()   
 189          {
 190   1         unsigned char i,n;
 191   1         receiver_EN = 1;
 192   1         transmiter_power = 0;            
 193   1         transmiter_EN = 0;
 194   1         myTxRxData[0]=CmdHead;
 195   1         myTxRxData[1]=MyAddress;
 196   1         myTxRxData[2]=ComMode_2;
 197   1         initsignal2();
 198   1      
 199   1         for(i=0;i<3;i++)
 200   1         {
 201   2            for(n=0;n<8;n++)
 202   2            {
 203   3               if((myTxRxData[i]&0x80)==0x80)//Îª1
 204   3               {
 205   4                  P10=0;
 206   4                  Delay4(120);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 207   4               }
 208   3               else//Îª0µÄÇé¿ö
 209   3               {
 210   4                  P10=0;
 211   4                  Delay4(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 212   4               }
 213   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
 214   3               myTxRxData[i]<<=1;
 215   3               Delay4(50);//ÑÓÊ±Òª´óÓÚ2ms
 216   3            }
 217   2         }
 218   1         transmiter_EN = 1;
 219   1         transmiter_power = 1;            
 220   1         receiver_EN = 0;
 221   1      }
 222          
 223          /*----------------------------------------------------------
 224             ComMode_3_Data()
 225             
 226             ±»µÁ±¨¾¯ĞÅºÅ£¬ÈÃ¸½»úÓïÒôÌáÊ¾¡°µç¶¯³µ±»µÁ¡°
 227          ----------------------------------------------------------*/
 228          
 229          void ComMode_3_Data()
 230          {
 231   1      // unsigned int j;
 232   1         unsigned char i,n;
 233   1         receiver_EN = 1;
 234   1         transmiter_power = 0;
 235   1         transmiter_EN = 0;
 236   1         myTxRxData[0]=CmdHead;
 237   1         myTxRxData[1]=MyAddress;
 238   1         myTxRxData[2]=ComMode_3;
C51 COMPILER V9.51   COMMUNICATION                                                         04/15/2014 14:04:52 PAGE 5   

 239   1      /* myTxRxData[3]=0x00;
 240   1         myTxRxData[4]=0x00;
 241   1         myTxRxData[5]=0x00;
 242   1         myTxRxData[6]=0x00;
 243   1      */
 244   1         initsignal();
 245   1      
 246   1         for(i=0;i<3;i++)
 247   1         {
 248   2            for(n=0;n<8;n++)
 249   2            {
 250   3               if((myTxRxData[i]&0x80)==0x80)//Îª1
 251   3               {
 252   4                  P10=0;
 253   4                  Delay4(120);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 254   4               }
 255   3               else//Îª0µÄÇé¿ö
 256   3               {
 257   4                  P10=0;
 258   4                  Delay4(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 259   4               }
 260   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
 261   3               myTxRxData[i]<<=1;
 262   3               Delay4(50);//ÑÓÊ±Òª´óÓÚ2ms
 263   3            }
 264   2         }
 265   1         transmiter_EN = 1;
 266   1         transmiter_power = 1;
 267   1         receiver_EN = 0;
 268   1      }
 269          
 270          /*--------------------------------------------------------
 271             ComMode_4_Data()
 272             
 273             ·¢ĞÅºÅ¸ø¸½»ú£¬ÈÃÆäÓïÒôÌáÊ¾¡°µç¶¯³µ±»Ì§Æğ¡±
 274          ---------------------------------------------------------*/
 275          
 276          void ComMode_4_Data()//·¢ËÍÌ§Æğ±àÂë
 277          {
 278   1         unsigned char i,n;
 279   1         receiver_EN = 1;
 280   1         transmiter_power = 0;
 281   1         transmiter_EN = 0;
 282   1         myTxRxData[0]=CmdHead;
 283   1         myTxRxData[1]=MyAddress;
 284   1         myTxRxData[2]=ComMode_4;
 285   1      /* myTxRxData[3]=0x00;
 286   1         myTxRxData[4]=0x00;
 287   1         myTxRxData[5]=0x00;
 288   1         myTxRxData[6]=0x00;
 289   1      */
 290   1         initsignal3();
 291   1      
 292   1         for(i=0;i<3;i++)
 293   1         {
 294   2            for(n=0;n<8;n++)
 295   2            {
 296   3               if((myTxRxData[i]&0x80)==0x80)//Îª1
 297   3               {
 298   4                  P10=0;
 299   4                  Delay4(120);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 300   4               }
C51 COMPILER V9.51   COMMUNICATION                                                         04/15/2014 14:04:52 PAGE 6   

 301   3               else//Îª0µÄÇé¿ö
 302   3               {
 303   4                  P10=0;
 304   4                  Delay4(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 305   4               }
 306   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
 307   3               myTxRxData[i]<<=1;
 308   3               Delay4(50);//ÑÓÊ±Òª´óÓÚ2ms
 309   3            }
 310   2         }
 311   1         transmiter_EN = 1;
 312   1         transmiter_power = 1;
 313   1         receiver_EN = 0;
 314   1      }
 315          
 316          /*-----------------------------------------------------------
 317             ComMode_5_Data()
 318             
 319             ·¢ĞÅºÅ¸ø¸½»ú£¬ÈÃÆäÓïÒôÌáÊ¾¡°µç¶¯³µµ¹µØÁË¡±
 320          ------------------------------------------------------------*/
 321          
 322          void ComMode_5_Data()//·¢ËÍµ¹µØ±àÂë
 323          {
 324   1         unsigned char i,n;
 325   1         receiver_EN = 1;
 326   1         transmiter_power = 0;//ÇĞ»»Îª300M·¢Éä
 327   1         transmiter_EN = 0;      //´ò¿ªÎŞÏß·¢Éä»ú
 328   1         myTxRxData[0]=CmdHead;
 329   1         myTxRxData[1]=MyAddress;
 330   1         myTxRxData[2]=ComMode_5;
 331   1      /* myTxRxData[3]=0x00;
 332   1         myTxRxData[4]=0x00;
 333   1         myTxRxData[5]=0x00;
 334   1         myTxRxData[6]=0x00;
 335   1      */
 336   1         initsignal3();
 337   1      
 338   1         for(i=0;i<3;i++)
 339   1         {
 340   2            for(n=0;n<8;n++)
 341   2            {
 342   3               if((myTxRxData[i]&0x80)==0x80)//Îª1
 343   3               {
 344   4                  P10=0;
 345   4                  Delay4(120);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 346   4               }
 347   3               else//Îª0µÄÇé¿ö
 348   3               {
 349   4                  P10=0;
 350   4                  Delay4(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 351   4               }
 352   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
 353   3               myTxRxData[i]<<=1;
 354   3               Delay4(50);//ÑÓÊ±Òª´óÓÚ2ms
 355   3            }
 356   2         }
 357   1         transmiter_EN = 1;
 358   1         transmiter_power = 1;
 359   1         receiver_EN = 0;
 360   1      }
 361          
 362          /*-----------------------------------------------------------------------------
C51 COMPILER V9.51   COMMUNICATION                                                         04/15/2014 14:04:52 PAGE 7   

 363             receive_byte()
 364             receive a byte program
 365          -----------------------------------------------------------------------------*/
 366          void receive_byte(void)
 367             {
 368   1         // P11 constantly HV, if detected a LV, judge it.
 369   1         if(P11 == 0)
 370   1            {
 371   2            // count the LV time, if more than 12ms, reset it.
 372   2            if(++receive_LV_count == 120)
 373   2               {
 374   3               receive_LV_count = 0;
 375   3               }
 376   2            receive_wire_flag = 0;
 377   2            }
 378   1         // if P11 return to HV
 379   1         else
 380   1            {
 381   2            // and already have LV before, so we think it maybe a bit signal
 382   2            if(receive_wire_flag == 0)
 383   2               {
 384   3               // set the flag, to judge a bit only one time
 385   3               receive_wire_flag = 1;
 386   3      
 387   3               // judge the LV time, if 3.5ms < time < 8ms, we think it is a "0". time<3.5ms means a noise.
 388   3               if((receive_LV_count > 35)&&(receive_LV_count <= 80)) 
 389   3                  {
 390   4                  // save "0" to one byte
 391   4                  one_receive_byte <<= 1;
 392   4                  one_receive_byte &= 0xfe;
 393   4                  one_receive_byte_count++;
 394   4                  receive_HV_count = 0;
 395   4                  }
 396   3               // time > 8ms, means a "1"
 397   3               else if((receive_LV_count > 80))
 398   3                  {
 399   4                  // save "1" to one byte
 400   4                  one_receive_byte <<= 1;
 401   4                  one_receive_byte |= 0x01;
 402   4                  one_receive_byte_count++;
 403   4                  receive_HV_count = 0;
 404   4                  }
 405   3               
 406   3               else
 407   3                  {
 408   4                  // increase the count for HV
 409   4                  receive_HV_count++;  
 410   4                  }
 411   3               // reset LV count
 412   3               receive_LV_count = 0;
 413   3               }
 414   2            else
 415   2               {
 416   3               // judge whether HV count > 6ms, if yes, means a restart
 417   3               if(++receive_HV_count >= 60)
 418   3                  {
 419   4                  one_receive_byte_count = 0;
 420   4                  receive_wire_flag = 1;
 421   4                  data_count = 0;
 422   4                  }     
 423   3               }
 424   2            }
C51 COMPILER V9.51   COMMUNICATION                                                         04/15/2014 14:04:52 PAGE 8   

 425   1         }
 426          
 427          /*-----------------------------------------------------------------------------
 428             receive_word()
 429             receive a word program
 430          -----------------------------------------------------------------------------*/
 431          void receive_word(void)
 432             {
 433   1         // one byte have 8 bit, once receive a bit, the count increase, once it is 8, it means a byte received.
 434   1         if(one_receive_byte_count == 8)
 435   1            {
 436   2            one_receive_byte_count = 0;
 437   2            // assign one byte to buffer[i] 
 438   2            received_data_buffer[data_count] = one_receive_byte;
 439   2            
 440   2            // judge whether buffer[0] is CmdHead
 441   2            if((data_count == 0) && (received_data_buffer[0] == CmdHead))
 442   2               {
 443   3               data_count = 1;
 444   3               }
 445   2            // judge whether buffer[1] is MyAddress
 446   2            else if((data_count == 1) && (received_data_buffer[1] == MyAddress))
 447   2               {
 448   3               data_count = 2;
 449   3               }
 450   2            else if(data_count == 2)
 451   2               {
 452   3               receive_data_finished_flag = 1;
 453   3               data_count = 0;
 454   3               }
 455   2            else 
 456   2               {
 457   3               data_count = 0;
 458   3               }
 459   2            }
 460   1         }
 461             
 462          /*---------------------------------------------------
 463             end of file
 464          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    820    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
